// <auto-generated />
using System;
using GestionClinique.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace projetdotnet.Migrations
{
    [DbContext(typeof(GestionCliniqueContext))]
    partial class GestionCliniqueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionClinique.Models.Administrateur", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminId")
                        .HasName("PK__Administ__719FE488C4EF4BF5");

                    b.ToTable("Administrateur", null, t =>
                        {
                            t.HasTrigger("TRG_UpdateAdminModificationDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("GestionClinique.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactureId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("RendezVousId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FactureId")
                        .HasName("PK__Facture__511BBA60ED8606D4");

                    b.HasIndex("AdminId");

                    b.HasIndex("PatientId");

                    b.HasIndex("RendezVousId");

                    b.ToTable("Facture", null, t =>
                        {
                            t.HasTrigger("TRG_UpdateFactureModificationDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("GestionClinique.Models.Medecin", b =>
                {
                    b.Property<int>("MedecinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedecinId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Planning")
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialisation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedecinId")
                        .HasName("PK__Medecin__69D27AFB2C2326D1");

                    b.HasIndex("AdminId");

                    b.ToTable("Medecin", null, t =>
                        {
                            t.HasTrigger("TRG_UpdateMedecinModificationDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("GestionClinique.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HistoriqueMedical")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PatientId")
                        .HasName("PK__Patient__970EC3661F993992");

                    b.HasIndex("AdminId");

                    b.ToTable("Patient", null, t =>
                        {
                            t.HasTrigger("TRG_UpdatePatientModificationDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("GestionClinique.Models.RendezVous", b =>
                {
                    b.Property<int>("RendezVousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RendezVousId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeOnly>("Heure")
                        .HasColumnType("time");

                    b.Property<int>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RendezVousId")
                        .HasName("PK__RendezVo__C4B748C791A83405");

                    b.HasIndex("AdminId");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.ToTable("RendezVous", t =>
                        {
                            t.HasTrigger("TRG_UpdateRendezVousModificationDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("GestionClinique.Models.Facture", b =>
                {
                    b.HasOne("GestionClinique.Models.Administrateur", "Admin")
                        .WithMany("Factures")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__Facture__AdminId__6D0D32F4");

                    b.HasOne("GestionClinique.Models.Patient", "Patient")
                        .WithMany("Factures")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__Facture__Patient__6B24EA82");

                    b.HasOne("GestionClinique.Models.RendezVous", "RendezVous")
                        .WithMany("Factures")
                        .HasForeignKey("RendezVousId")
                        .IsRequired()
                        .HasConstraintName("FK__Facture__RendezV__6C190EBB");

                    b.Navigation("Admin");

                    b.Navigation("Patient");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionClinique.Models.Medecin", b =>
                {
                    b.HasOne("GestionClinique.Models.Administrateur", "Admin")
                        .WithMany("Medecins")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__Medecin__AdminId__5DCAEF64");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GestionClinique.Models.Patient", b =>
                {
                    b.HasOne("GestionClinique.Models.Administrateur", "Admin")
                        .WithMany("Patients")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__Patient__AdminId__5812160E");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GestionClinique.Models.RendezVous", b =>
                {
                    b.HasOne("GestionClinique.Models.Administrateur", "Admin")
                        .WithMany("RendezVous")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__RendezVou__Admin__6477ECF3");

                    b.HasOne("GestionClinique.Models.Medecin", "Medecin")
                        .WithMany("RendezVous")
                        .HasForeignKey("MedecinId")
                        .IsRequired()
                        .HasConstraintName("FK__RendezVou__Medec__628FA481");

                    b.HasOne("GestionClinique.Models.Patient", "Patient")
                        .WithMany("RendezVous")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__RendezVou__Patie__6383C8BA");

                    b.Navigation("Admin");

                    b.Navigation("Medecin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("GestionClinique.Models.Administrateur", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("Medecins");

                    b.Navigation("Patients");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionClinique.Models.Medecin", b =>
                {
                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionClinique.Models.Patient", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionClinique.Models.RendezVous", b =>
                {
                    b.Navigation("Factures");
                });
#pragma warning restore 612, 618
        }
    }
}
